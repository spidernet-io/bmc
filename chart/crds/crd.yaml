apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusteragents.bmc.spidernet.io
spec:
  group: bmc.spidernet.io
  names:
    kind: ClusterAgent
    listKind: ClusterAgentList
    plural: clusteragents
    singular: clusteragent
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClusterAgent is the Schema for the clusteragents API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest internal
              value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object
              represents. Servers may infer this from the endpoint the client submits
              requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterAgentSpec defines the desired state of ClusterAgent
            type: object
            properties:
              agentYaml:
                description: AgentConfig defines the configuration for the agent
                type: object
                properties:
                  image:
                    description: Image is the agent container image
                    type: string
                  replicas:
                    description: Replicas is the number of agents to run
                    type: integer
                    default: 1
                    minimum: 0
                  underlayInterface:
                    description: UnderlayInterface specifies the network interface configuration for underlay network
                    type: string
                  nodeAffinity:
                    description: NodeAffinity defines scheduling constraints for the agent pods
                    type: object
                    properties:
                      preferredDuringSchedulingIgnoredDuringExecution:
                        description: The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions.
                        type: array
                        items:
                          description: An empty preferred scheduling term matches all objects with implicit weight 0
                          type: object
                          required:
                            - preference
                            - weight
                          properties:
                            preference:
                              description: A node selector term, associated with the corresponding weight.
                              type: object
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements by node's labels.
                                  type: array
                                  items:
                                    description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    type: object
                                    required:
                                      - key
                                      - operator
                                    properties:
                                      key:
                                        description: The label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship to a set of values.
                                        type: string
                                      values:
                                        description: An array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                        type: array
                                        items:
                                          type: string
                                matchFields:
                                  description: A list of node selector requirements by node's fields.
                                  type: array
                                  items:
                                    description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    type: object
                                    required:
                                      - key
                                      - operator
                                    properties:
                                      key:
                                        description: The label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship to a set of values.
                                        type: string
                                      values:
                                        description: An array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                        type: array
                                        items:
                                          type: string
                            weight:
                              description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                              type: integer
                              format: int32
                              minimum: 1
                              maximum: 100
                      requiredDuringSchedulingIgnoredDuringExecution:
                        description: If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node.
                        type: object
                        required:
                          - nodeSelectorTerms
                        properties:
                          nodeSelectorTerms:
                            description: Required. A list of node selector terms. The terms are ORed.
                            type: array
                            items:
                              description: A null or empty node selector term matches no objects.
                              type: object
                              properties:
                                matchExpressions:
                                  description: A list of node selector requirements by node's labels.
                                  type: array
                                  items:
                                    description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    type: object
                                    required:
                                      - key
                                      - operator
                                    properties:
                                      key:
                                        description: The label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship to a set of values.
                                        type: string
                                      values:
                                        description: An array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                        type: array
                                        items:
                                          type: string
                                matchFields:
                                  description: A list of node selector requirements by node's fields.
                                  type: array
                                  items:
                                    description: A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    type: object
                                    required:
                                      - key
                                      - operator
                                    properties:
                                      key:
                                        description: The label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: Represents a key's relationship to a set of values.
                                        type: string
                                      values:
                                        description: An array of string values. If the operator is In or NotIn, the values array must be non-empty.
                                        type: array
                                        items:
                                          type: string
                  nodeName:
                    description: NodeName is a request to schedule this pod onto a specific node
                    type: string
                required:
                - underlayInterface
                - image
                - replicas
                type: object
              endpoint:
                description: EndpointConfig defines the endpoint configuration for the agent
                type: object
                properties:
                  port:
                    description: Port is the endpoint port
                    type: integer
                    default: 443
                    minimum: 1
                    maximum: 65535
                  secretName:
                    description: SecretName is the name of the secret containing the TLS certificates
                    type: string
                  secretNamespace:
                    description: SecretNamespace is the namespace of the secret containing the TLS certificates
                    type: string
                  https:
                    description: HTTPS enables HTTPS for the endpoint
                    type: boolean
                    default: true
                required:
                - port
                - https
                type: object
              feature:
                description: FeatureConfig defines the feature configuration for the agent
                type: object
                properties:
                  enableDhcpServer:
                    description: EnableDhcpServer enables the DHCP server
                    type: boolean
                    default: true
                  enableDhcpDiscovery:
                    description: EnableDhcpDiscovery enables DHCP discovery
                    type: boolean
                    default: true
                  dhcpServerInterface:
                    description: DhcpServerInterface specifies the interface for DHCP server
                    type: string
                    default: "net1"
                  redfishMetrics:
                    description: RedfishMetrics enables redfish metrics collection
                    type: boolean
                    default: false
                  enableGuiProxy:
                    description: EnableGuiProxy enables GUI proxy
                    type: boolean
                    default: true
                required:
                - enableDhcpServer
                - enableDhcpDiscovery
                - dhcpServerInterface
                - redfishMetrics
                - enableGuiProxy
                type: object
            required:
            - agentYaml
            type: object
          status:
            description: ClusterAgentStatus defines the observed state of ClusterAgent
            type: object
            properties:
              ready:
                description: Whether the agent is ready
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    additionalPrinterColumns:
    - name: READY
      type: boolean
      jsonPath: .status.ready
    - name: AGE
      type: date
      jsonPath: .metadata.creationTimestamp
    subresources:
      status: {}

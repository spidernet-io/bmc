apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-agent-templates
  labels:
    {{- include "bmc-operator.labels" . | nindent 4 }}
data:
  agent-deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: {{`{{ .Name }}`}}
      namespace: {{`{{ .Namespace }}`}}
      labels:
        app: bmc-agent
        cluster: {{`{{ .ClusterName }}`}}
    spec:
      replicas: {{`{{ .Replicas }}`}}
      selector:
        matchLabels:
          app: bmc-agent
          cluster: {{`{{ .ClusterName }}`}}
      template:
        metadata:
          labels:
            app: bmc-agent
            cluster: {{`{{ .ClusterName }}`}}
          annotations:
            k8s.v1.cni.cncf.io/networks: {{`{{ .UnderlayInterface }}`}}
        spec:
          serviceAccountName: {{`{{ .ServiceAccountName }}`}}
          {{`{{ if .NodeAffinity }}`}}
          affinity:
            nodeAffinity:
              {{`{{ toYaml .NodeAffinity }}`}}
          {{`{{ end }}`}}
          {{`{{ if .NodeName }}`}}
          nodeName: {{`{{ .NodeName }}`}}
          {{`{{ end }}`}}
          containers:
          - name: agent
            image: {{`{{ .Image }}`}}
            env:
            - name: CLUSTERAGENT_NAME
              value: {{`{{ .ClusterName }}`}}
            args:
            - --health-port=8080
            readinessProbe:
              httpGet:
                path: /readyz
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 10
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            livenessProbe:
              httpGet:
                path: /healthz
                port: 8080
              initialDelaySeconds: 15
              periodSeconds: 20
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
  agent-serviceaccount.yaml: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: {{`{{ .Name }}`}}
      namespace: {{`{{ .Namespace }}`}}
      labels:
        app: bmc-agent
        cluster: {{`{{ .ClusterName }}`}}
  agent-role.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: {{`{{ .Name }}`}}
      labels:
        app: bmc-agent
        cluster: {{`{{ .ClusterName }}`}}
    rules:
    - apiGroups: [""]
      resources: ["pods", "services", "configmaps", "secrets"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
    - apiGroups: ["apps"]
      resources: ["deployments"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["bmc.spidernet.io"]
      resources: ["clusteragents"]
      verbs: ["get", "list", "watch"]
  agent-rolebinding.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: {{`{{ .Name }}`}}
      labels:
        app: bmc-agent
        cluster: {{`{{ .ClusterName }}`}}
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: {{`{{ .RoleName }}`}}
    subjects:
    - kind: ServiceAccount
      name: {{`{{ .ServiceAccountName }}`}}
      namespace: {{`{{ .Namespace }}`}}
